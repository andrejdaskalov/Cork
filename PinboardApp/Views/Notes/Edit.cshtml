@model PinboardApp.Models.Note

@{
    ViewBag.Title = "Edit";
}




<div class="d-flex flex-row justify-content-around">
    <div class="container-md">
        <h2>Edit Note</h2>


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="mb-3">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.Data, htmlAttributes: new { @class = "form-label" })
                <div class="col-md-10">
                    @* @Html.EditorFor(model => model.Note.Data, new { htmlAttributes = new { @class = "form-control" } }) *@
                    @Html.TextAreaFor(model => model.Data, new { @class = "form-control" })
                    <div class="form-text">If you are creating a Link or Image Note, the Url goes here.</div>
                    @Html.ValidationMessageFor(model => model.Data, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "form-label" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.Type, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                </div>
            </div>
            @Html.HiddenFor(model => model.X)
            @Html.HiddenFor(model => model.Y)

            <div class="d-flex flex-row justify-content-start">
                <input type="submit" value="Save" class="btn btn-primary" />
                <button class="btn btn-outline-secondary d-inline-block mx-2" onclick="location.href = '@Url.Action("Index", "Notes")'">Back to Notes</button>
            </div>
        }


        @* @Html.ActionLink("Back to List", "Index", new { @class = "btn btn-secondary" }) *@


    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
